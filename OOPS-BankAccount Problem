import java.util.*;

// abstraction 

abstract class BankAccount {
    private String AccountHolderName;
    private double balance;
    
    BankAccount(String AccountHolderName, double balance){
        this.AccountHolderName = AccountHolderName;
        this.balance = balance;
    }
     
    public abstract void displayDetails();
    public abstract void currentBalance();
     
    public String getAccountHolderName(){
        return AccountHolderName;
    }
     
    public void setAccountHolderName(String AccountHolderName){
        this.AccountHolderName = AccountHolderName;
    }
     
    public double getbalance(){
        return balance;
    } 
    
    public void setbalance(double balance){
        this.balance = balance;
    }
     
    // polymorphism
    
    public void deposit(double amount){
        if(amount > 0){
            balance += amount;
            System.out.println("Deposited: " + amount);
        } else {
            System.out.println("Invalid Amount");
        }
    }
     
    // polymorphism
    
    public void withdraw(double amount){
        if(amount > 0 && amount <= balance){
            balance -= amount;
            System.out.println("Withdrawal Amount: " + amount);
        } else {
            System.out.println("Insufficient amount");
        }
    }
}

class SavingsAccount extends BankAccount {
    public SavingsAccount(String AccountHolderName, double balance){
        super(AccountHolderName, balance);
    }

    @Override
    public void displayDetails(){
        System.out.println("Account Type: Savings");
        System.out.println("Account Holder Name: " + getAccountHolderName());
        System.out.println("Current Balance: " + getbalance());
    }

    @Override
    public void currentBalance() {
        System.out.println("Final Updated Balance: " + getbalance());
    }
}

public class Main {
    public static void main(String[] args){
        BankAccount savings = new SavingsAccount("Kalpana.K", 2000);
        savings.deposit(2000);
        savings.withdraw(500);
        savings.displayDetails(); // uncommented this line to display details
        savings.currentBalance();
    }
}
